<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.service.TeacherService">
	<resultMap type="com.db.entity.Teacher" id="BaseResultMap">
		<result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="teacher_status" property="teacherStatus"
			jdbcType="INTEGER" />
		<result column="subject" property="subject" jdbcType="INTEGER" />
		<result column="grade" property="grade" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="campus" property="campus" jdbcType="VARCHAR" />
		<result column="account_validity" property="accountValidity" />
		<result column="class_no" property="classId" jdbcType="VARCHAR" />
       <result column="teacher_type" property="teacherType" jdbcType="VARCHAR" />

		<association property="subject2" javaType="com.db.entity.Subject">
			<id property="subjectId" column="subject_id" />
			<result property="subjectName" column="subject_name" />
		</association>

		<association property="grade2" javaType="com.db.entity.Grade">
			<id property="gradeId" column="grade_id" />
			<result property="gradeName" column="grade_name" />
		</association>
		
		<association property="schoolZone" javaType="com.db.entity.SchoolZone">
			<id column="school_id" property="schoolId" jdbcType="INTEGER" />
		      <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
		</association>
		
		<association property="role" javaType="com.db.entity.Role">
			<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_limit_id" property="roleLimitId"
			jdbcType="INTEGER" />
		<result column="role_type" property="roleType" jdbcType="INTEGER" />
		</association>

      <association property="userRole" javaType="com.db.entity.UserRole">
			<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		</association>
		<collection property="gradelist" resultMap="GradeMap"></collection>
		<collection property="taList" resultMap="TeacherAuthorityMap"></collection>
	</resultMap>

	<resultMap id="GradeMap" type="com.db.entity.Grade">
		<id column="grade_id" property="gradeId" jdbcType="INTEGER" />
		<result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<resultMap type="com.db.entity.TeacherAuthority" id="TeacherAuthorityMap">
		<id column="ta_id" property="taId" jdbcType="INTEGER" />
		<result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
		<result column="grade" property="grade" jdbcType="INTEGER" />
		<result column="handout_authority" property="handoutAuthority" jdbcType="VARCHAR" />
		<result column="questions_authority" property="questionsAuthority" jdbcType="VARCHAR" />
		<result column="paper_authority" property="paperAuthority" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" />
	</resultMap>

	<select id="getTeacherByUserName" resultMap="BaseResultMap"
		parameterType="String">
		select * from tb_teacher where user_name=#{userName}
	</select>

	<select id="getTeacherById" parameterType="Integer" resultMap="BaseResultMap">
		select * from tb_teacher where teacher_id=#{teacherId};
	</select>

	<select id="getAllTeacher" parameterType="Integer" resultMap="BaseResultMap">
		select * from tb_teacher limit #{pageNo},#{pageSize};
	</select>

	<select id="searchByName" parameterType="String" resultMap="BaseResultMap">
		<bind name="bind_content" value="'%'+content+'%'" />
		select * from tb_teacher where teacher_name like #{bind_content};
	</select>

	<select id="getCount" resultType="long">
		select count(*) from
		tb_teacher;
	</select>

	<insert id="addTeacher" keyProperty="teacherId" useGeneratedKeys="true"
	    parameterType="com.db.entity.Teacher">
		insert into tb_teacher
		(teacher_id,user_name,teacher_name,password,sex,age,
		teacher_status,create_time,campus,
		account_validity,teacher_type
		<if test="email != null and email !=''">
		 <![CDATA[,email]]>
		</if>
		<if test="subject != null">
		 <![CDATA[,subject]]>
		</if>
		<if test="grade != null">
		 <![CDATA[,grade]]>
		</if>
		<if test="phone != null">
		 <![CDATA[,phone]]>
		</if>
		) 
		values(#{teacherId},#{userName},#{teacherName},
		#{password},#{sex},#{age},
		#{teacherStatus},#{createTime},#{campus},
		#{accountValidity},#{teacherType}
		<if test="email != null and email !=''">
		 <![CDATA[,#{email}]]>
		</if>
		<if test="subject != null">
		 <![CDATA[,#{subject}]]>
		</if>
		<if test="grade != null">
		 <![CDATA[,#{grade}]]>
		</if>
		<if test="phone != null">
		 <![CDATA[,#{phone}]]>
		</if>
		);
	</insert>

	<update id="updateTeacher" parameterType="com.db.entity.Teacher">
		update tb_teacher
		set
		teacher_name=#{teacherName},sex=#{sex},age=#{age},
		 teacher_status=#{teacherStatus},update_time=#{updateTime},
		 campus=#{campus},account_validity=#{accountValidity} 
		<if test="userName != null and userName != ''">
		    ,user_name=#{userName}
		</if>
		<if test="password != null and password != ''">
		    ,password=#{password}
		</if>
		<if test="phone != null and phone != ''">
		    ,phone=#{phone}
		</if>
		<if test="email != null and email != ''">
		    ,email=#{email}
		</if>
		<if test="grade != null and grade != ''">
		    ,grade=#{grade}
		</if>
		<if test="subject != null and subject != ''">
		    ,subject=#{subject}
		</if>
		where teacher_id=#{teacherId};
	</update>

	<delete id="deleteTeacher" parameterType="java.lang.Integer">
		delete  from tb_teacher
		where teacher_id=#{teacherId};
	</delete>

	<update id="updateTeacherClass" parameterType="com.db.entity.Teacher">
		update tb_teacher
		set class_no=#{classId},update_time=#{updateTime}
		where teacher_id=#{teacherId};
	</update>

	<select id="getTeacherByClassId" parameterType="Integer"
		resultMap="BaseResultMap">
		select * from tb_teacher where class_no REGEXP '(^|,)${classId}($|,)'
		 and campus=#{schoolId}
	</select>
	<select id="getTeacherByGradeandSubject" parameterType="Integer"
	resultMap="BaseResultMap">
	select * from tb_teacher where 1=1
	<if test="grade != null">
		and grade like CONCAT('%','${grade}','%')
	</if>
	<if test="subject != null">
		and subject=#{subject}
	</if>
	<if test="schoolId != null">
		and campus=#{schoolId}
	</if>
	<choose>
		<when test="roleId != null">
			and teacher_type=#{roleId}
		</when>
		<otherwise>
			and teacher_type in(5,6)
		</otherwise>
	</choose>
	limit #{pageNo},#{pageSize};
</select>

	<select id="getTeacherByGradeandSubjectCount" parameterType="Integer"
	resultType="long">
	select count(*) from tb_teacher where 1=1
	<if test="grade != null">
		and grade like CONCAT('%','${grade}','%')
	</if>
	<if test="subject != null">
		and subject=#{subject}
	</if>
	<if test="schoolId != null">
		and campus=#{schoolId}
	</if>
	<choose>
		<when test="roleId != null">
			and teacher_type=#{roleId}
		</when>
		<otherwise>
			and teacher_type=5
		</otherwise>
	</choose>
</select>
	<select id="updatePassword" parameterType="com.db.entity.Teacher">
		update tb_teacher set password=#{password},update_time=now()
		where teacher_id=#{teacherId};
	</select>

	<!-- 当前登录者是管理员 -->
	<select id="findTeacherById" resultMap="BaseResultMap">
		SELECT *
		FROM tb_teacher t LEFT JOIN tb_subject s ON t.subject=s.subject_id
		LEFT JOIN tb_grade g ON t.grade=g.grade_id
		LEFT JOIN td_teacher_authority ta ON t.teacher_id=ta.teacher_id
		LEFT JOIN td_user_role ur ON t.teacher_id=ur.user_id
		LEFT JOIN tb_role r ON ur.role_id=r.role_id
		left join tb_school_zone sz on t.campus=sz.school_id
		WHERE 1=1
		<if test="teacherName != null and teacherName != ''">
			and t.teacher_name like CONCAT('%','${teacherName}','%')
		</if>
		<if test="subject != null">
		and t.subject =#{subject}
	   </if>
	   <if test="schoolId != null">
		and t.campus =#{schoolId}
	   </if>
		GROUP BY t.teacher_id desc HAVING t.teacher_id >= 1 limit
		#{pageNo},#{pageSize}
	</select>
	
	<select id="getCountId" resultType="int">
	  select count(*) from tb_teacher where 1=1
	    <if test="teacherName != null and teacherName != ''">
	       and teacher_name like CONCAT('%','${teacherName}','%')
	    </if>
	    <if test="subject != null">
		and subject =#{subject}
	  </if>
	  <if test="schoolId != null">
		and campus =#{schoolId}
	   </if>
	</select>
	
	<!-- 当前登录者是校区管理员 -->
	<select id="findTeacherSchoolIdById" resultMap="BaseResultMap">
	SELECT *
	FROM tb_teacher t LEFT JOIN tb_subject s ON t.subject=s.subject_id
	LEFT JOIN tb_grade g ON t.grade=g.grade_id
	LEFT JOIN td_teacher_authority ta ON t.teacher_id=ta.teacher_id
	LEFT JOIN td_user_role ur ON t.teacher_id=ur.user_id
	LEFT JOIN tb_role r ON ur.role_id=r.role_id 
	left join tb_school_zone sz on t.campus=sz.school_id
	WHERE t.campus=#{schoolId}
	<if test="teacherName != null and teacherName != ''">
		and t.teacher_name like CONCAT('%','${teacherName}','%')
	</if>
	<if test="subject != null">
		and t.subject =#{subject}
	</if>
	GROUP BY t.teacher_id desc HAVING t.teacher_id >= 1 limit
	#{pageNo},#{pageSize}
	</select>
	<select id="getSchoolIdById" resultType="int">
	  select count(*) from tb_teacher where campus=#{schoolId}
	    <if test="teacherName != null and teacherName != ''">
	       and teacher_name like CONCAT('%','${teacherName}','%')
	    </if>
	    <if test="subject != null">
		and subject =#{subject}
	</if>
	</select>
	
	<select id="seeTeacherById" resultMap="BaseResultMap">
	select * from tb_teacher t left join tb_subject s on
	t.subject=s.subject_id
	left join tb_grade g on t.grade=g.grade_id left join td_teacher_authority
	ta on t.teacher_id=ta.teacher_id
	LEFT JOIN td_user_role ur ON t.teacher_id=ur.user_id
	left join tb_role r on ur.role_id=r.role_id 
	left join tb_school_zone sz on t.campus=sz.school_id
	WHERE t.teacher_id=#{teacherId}
	<!-- t.teacher_id=#{teacherId} -->
	<if test="teacherName != null and teacherName != ''">
		and t.teacher_name like CONCAT('%','${teacherName}','%')
	</if>
	GROUP BY t.teacher_id desc HAVING t.teacher_id >= 1 limit
	#{pageNo},#{pageSize}
</select>
	
	
	
	<select id="getCountTeacherId" resultType="int">
	  select count(*) from tb_teacher where teacher_id=#{teacherId}
	    <if test="teacherName != null and teacherName != ''">
	       and teacher_name like CONCAT('%','${teacherName}','%')
	    </if>
	</select>
	
	<select id="getPhone" resultMap="BaseResultMap">
	   select * from tb_teacher where phone=#{phone} and teacher_id!=#{teacherId};
	</select>
	<select id="getPhone1" resultMap="BaseResultMap">
	   select * from tb_teacher where phone=#{phone};
	</select>
	<select id="getClassNoById" resultType="int">
	select count(*) from tb_teacher where class_no REGEXP '(^|,)${classId}($|,)'
		 and campus=#{schoolId}
	</select>
	<select id="findIsExistenceCampus" resultMap="BaseResultMap">
	 select * from tb_teacher where campus=#{schoolId}
	</select>
	<!--拿到当前登录用户的角色类型  -->
	<select id="getTeacherRileById" resultMap="BaseResultMap">
	 select * from tb_teacher t 
	 LEFT JOIN td_user_role ur ON t.teacher_id=ur.user_id 
	 left join tb_role r on ur.role_id=r.role_id 
	 where t.teacher_id=#{teacherId};
	</select>
</mapper>