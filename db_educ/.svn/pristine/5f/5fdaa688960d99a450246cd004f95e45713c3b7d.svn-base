<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.service.TestRecordService">
	<resultMap id="TestRecordMap" type="com.db.entity.TestRecord">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="student_id" property="studentId" jdbcType="INTEGER" />
		<result column="subject" property="subjectId" jdbcType="INTEGER" />
		<result column="paper_type" property="paperType" jdbcType="INTEGER" />
		<result column="paper_id" property="paperId" jdbcType="INTEGER" />
		<result column="class_id" property="classId" jdbcType="INTEGER" />
		<result column="score" property="score" jdbcType="DOUBLE" />
		<result column="write_number" property="writeNumber" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="total_time" property="totalTime" />
		<result column="grade_id" property="gradeId" jdbcType="INTEGER" />
		<result column="year" property="year" jdbcType="INTEGER" />
		<result column="choice_id" property="choiceId" jdbcType="INTEGER" />
		<result column="examen_status" property="examenStatus" jdbcType="INTEGER" />
		<result column="score_rank" property="scoreRank" jdbcType="INTEGER" />
		
		<association property="paperInfo" javaType="com.db.entity.PaperInfo">
			<id column="pi_id" property="piId" jdbcType="INTEGER" />
			<result column="pi_name" property="piName" jdbcType="VARCHAR" />
			<result column="subject" property="subject" jdbcType="INTEGER" />
			<result column="pi_type" property="piType" jdbcType="INTEGER" />
			<result column="grade" property="grade" jdbcType="INTEGER" />
			<result column="science" property="science" jdbcType="INTEGER" />
			<result column="is_public" property="isPublic" jdbcType="INTEGER" />
			<result column="difficulty_value" property="difficultyValue"
				jdbcType="INTEGER" />
			<result column="build_user" property="buildUser" jdbcType="INTEGER" />
			<result column="build_user_name" property="buildUserName"
				jdbcType="VARCHAR" />
			<result column="topic_totai" property="topicTotai" jdbcType="VARCHAR" />
			<result column="paper_explain" property="paperExplain"
				jdbcType="VARCHAR" />
		</association>

		<association property="subject" javaType="com.db.entity.Subject">
			<id property="subjectId" column="subject_id" />
			<result property="subjectName" column="subject_name" />
		</association>

		<association property="schoolZone" javaType="com.db.entity.SchoolZone">
			<id column="school_id" property="schoolId" jdbcType="INTEGER" />
			<result column="school_name" property="schoolName" jdbcType="VARCHAR" />
		</association>

		<association property="grade" javaType="com.db.entity.Grade">
			<id column="grade_id" property="gradeId" jdbcType="INTEGER" />
			<result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
		</association>

		<association property="studentList" javaType="com.db.entity.Student">
			<id column="student_id" property="studentId" jdbcType="INTEGER" />
			<result column="student_name" property="studentName" jdbcType="VARCHAR" />
			<result column="year" property="year" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="INTEGER" />
			<result column="age" property="age" jdbcType="INTEGER" />
			<result column="grade" property="grade" jdbcType="INTEGER" />
			<result column="class_no" property="classNo" jdbcType="INTEGER" />
			<result column="subject_type" property="subjectType" jdbcType="VARCHAR" />
			<result column="choice_type" property="choiceType" jdbcType="INTEGER" />
			<result column="student_status" property="studentStatus"
				jdbcType="INTEGER" />
			<result column="school_id" property="schoolId" jdbcType="INTEGER" />
			<result column="status" property="status" jdbcType="INTEGER" />
		</association>

		<association property="paperAnswer" javaType="com.db.entity.PaperAnswer">
			<id column="answer_id" property="answerId" jdbcType="INTEGER" />
			<result column="paper_id" property="paperId" jdbcType="INTEGER" />
			<result column="write_answer" property="writeAnswer" jdbcType="VARCHAR" />
			<result column="is_true" property="isTrue" jdbcType="INTEGER" />
			<result column="question_type" property="questionType"
				jdbcType="INTEGER" />
		</association>

		<association property="grades" javaType="com.db.entity.Grade">
			<id column="grade_id" property="gradeId" jdbcType="INTEGER" />
			<result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
		</association>

		<association property="taskType" javaType="com.db.entity.TaskType">
			<id column="type_id" property="typeId" jdbcType="INTEGER" />
			<result column="tasktype_name" property="taskTypeName"
				jdbcType="VARCHAR" />
			<result column="create_time" property="createTime" />
		</association>

		<association property="classNo" javaType="com.db.entity.ClassNo">
			<id column="class_id" property="classId" jdbcType="INTEGER" />
			<result column="grade" property="grade" jdbcType="VARCHAR" />
			<result column="class_name" property="className" />
		</association>
	</resultMap>

	<resultMap id="entranceMap" type="com.db.entity.EntranceStudent">
		<result column="studentId" property="studentId" jdbcType="INTEGER" />
		<result column="subjects" property="subjects" jdbcType="VARCHAR" />
	</resultMap>

	<insert id="addTestrecord" parameterType="com.db.entity.TestRecord"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		td_test_record(student_id,paper_id,class_id,paper_type,subject,status,create_time
		<if test="gradeId !=null"> 
			<![CDATA[,grade_id]]>
		</if>
		<if test="choiceId !=null"> 
			<![CDATA[,choice_id]]>
		</if>
		)
		values(#{studentId},#{paperId},#{classId},#{paperType},#{subjectId},#{status},#{createTime}
		<if test="gradeId !=null"> 
			<![CDATA[,#{gradeId}]]>
		</if>
		<if test="choiceId !=null"> 
			<![CDATA[,#{choiceId}]]>
		</if>
		);
	</insert>

	<insert id="addExamination" parameterType="com.db.entity.TestRecord">
		insert into
		td_test_record
		(create_time,subject,status,paper_type,year,choice_id,school_id,grade_id,paper_id)
		values(#{createTime},#{subjectId},#{status},#{paperType},#{year},#{choiceId},#{schoolId},#{gradeId},#{paperId})
	</insert>

	<select id="getTestrecordById" resultMap="TestRecordMap">
		select * from
		td_test_record where id=#{id};
	</select>

	<select id="getTestListByStudentId" resultMap="TestRecordMap">
		select * from
		td_test_record ttr left join tb_paper_info tpi on ttr.paper_id=
		tpi.pi_id left join tb_subject ts on tpi.subject=ts.subject_id
		where
		ttr.student_id=#{studentId} and (ttr.paper_type &lt;&gt;4 or
		(ttr.paper_type=4 and ttr.status=3))
		order by ttr.create_time desc limit
		#{pageNo},#{pageSize};
	</select>
	<update id="updateScoreANDWriteNumber" parameterType="com.db.entity.TestRecord">
		update
		td_test_record set
		update_time=#{updateTime},score=#{score},total_time=#{totalTime}
		,write_number=#{writeNumber} where student_id=#{studentId} and
		paper_id=#{paperId}
	</update>

	<select id="findRecordScore" resultMap="TestRecordMap">
		select * from
		td_test_record ttr left join tb_paper_info
		tpi on
		ttr.paper_id=tpi.pi_id left join tb_subject ts on
		ttr.subject=ts.subject_id where id=#{id}
	</select>

	<select id="getPaperByTestRecord" parameterType="Integer"
		resultMap="TestRecordMap">
		select * from td_test_record ttr left join tb_paper_info
		tpi
		on ttr.paper_id=tpi.pi_id left join tb_subject ts on
		ttr.subject=ts.subject_id left join tb_grade tg on
		tpi.grade=tg.grade_id where ttr.student_id=#{studentId} and
		paper_type=4 and status=1;
	</select>

	<select id="getStatusByStudentId" resultMap="TestRecordMap">
		select * from
		td_test_record where student_id=#{studentId} order by create_time desc
		limit 1;
	</select>

	<select id="getByStudentId" resultMap="TestRecordMap">
		select * from
		td_test_record where student_id=#{studentId} and paper_type=4;
	</select>
	<!-- -->
	<select id="getEntranceingStudent" resultMap="TestRecordMap">
		select
		ttr.student_id,ttr.paper_id,ttr.status,ts.student_name,ts.sex,ts.age,ts.grade,tsj.*,tg.*
		from
		td_test_record ttr left join tb_student ts on
		ttr.student_id=ts.student_id
		left join tb_subject tsj on
		ttr.subject=tsj.subject_id left join tb_grade
		tg
		on ts.grade=tg.grade_id
		where (ttr.status=1 or ttr.status=2) and
		ttr.paper_type=4 and
		ts.school_id=#{schoolId}
		<if test="subjectId != null and subjectId !=''">
			and ttr.subject=#{subjectId}
		</if>
		<if test="gradeId != null">
			and ttr.grade_id=#{gradeId}
		</if>
		limit #{pageNo},#{pageSize};
	</select>

	<select id="getEntranceingStudentCount" resultType="long">
		select
		COALESCE(count(*),0) from
		td_test_record ttr left join tb_student ts on
		ttr.student_id=ts.student_id
		left join tb_subject tsj on
		ttr.subject=tsj.subject_id left join tb_grade
		tg
		on ts.grade=tg.grade_id
		where (ttr.status=1 or ttr.status=2) and
		ttr.paper_type=4 and
		ts.school_id=#{schoolId} and ttr.subject=#{subjectId} and
		ttr.grade_id=#{gradeId};
	</select>

	<select id="getEntranceStudent" resultMap="TestRecordMap">
		select
		ttr.student_id,ttr.paper_id,ttr.status,ts.student_name,ts.sex,ts.age,ts.grade,tsj.*,tg.*
		from
		td_test_record ttr left join tb_student ts on
		ttr.student_id=ts.student_id
		left join tb_subject tsj on
		ttr.subject=tsj.subject_id left join tb_grade
		tg
		on ts.grade=tg.grade_id
		where ttr.paper_type=4 and
		ts.school_id=#{schoolId} and
		ts.student_status=1;
	</select>

	<select id="getEntranceByStudentId" resultMap="TestRecordMap">
		select * from
		td_test_record ttr left join tb_student ts on
		ttr.student_id=ts.student_id
		left join tb_subject tsj on
		ttr.subject=tsj.subject_id left join tb_grade
		tg
		on ts.grade=tg.grade_id
		where ttr.paper_type=4 and
		ts.school_id=#{schoolId} and
		ttr.student_id=#{studentId};
	</select>

	<select id="getEntranceBySchool" resultMap="entranceMap">
		select ttr.student_id
		as studentId,GROUP_CONCAT(ttr.subject) as subjects from
		td_test_record
		ttr left join tb_student ts on ttr.student_id=ts.student_id
		left join
		tb_subject tsj on ttr.subject=tsj.subject_id left join tb_grade
		tg
		on
		ts.grade=tg.grade_id where ttr.paper_type=4 and
		ts.school_id=1 GROUP BY
		ttr.student_id
	</select>

	<update id="updateTestrecord" parameterType="com.db.entity.TestRecord">
	update td_test_record
	set update_time=#{updateTime}
	<if test="status != null">
		,status=#{status}
	</if>
	<if test="examenStatus != null">
		,examen_status=#{examenStatus}
	</if>
	where student_id=#{studentId} and paper_id=#{paperId};
</update>

	<update id="updatenameandall" parameterType="com.db.entity.TestRecord">
		update
		td_test_record set student_name=#{studentName},student_phone=#{
		studentPhone},student_school=#{studentSchool},update_time=#{
		updateTime} where student_id=#{studentId} and paper_id=#{paperId};
	</update>
	<update id="updateExamination" parameterType="com.db.entity.TestRecord"
		useGeneratedKeys="true" keyProperty="id">
		update
		td_test_record set
		update_time=#{updateTime}
		<if test="schoolId != null">
			,school_id=#{schoolId}
		</if>
		<if test="choiceId != null">
			,choice_id=#{choiceId}
		</if>
		<if test="year != null">
			,year=#{year}
		</if>
		<if test="gradeId != null">
			,grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			,subject=#{subjectId}
		</if>

		<if test="score != null">
			,score=#{score}
		</if>
		<if test="writeNumber != null">
			,write_number=#{writeNumber}
		</if>
		where id=#{id}
	</update>
	<select id="isWriteMessage" resultMap="TestRecordMap">
		select * from
		td_test_record where student_id=#{studentId} and paper_id=#{paperId}
		<if test="schoolId != null">
		 and choice_id=#{schoolId}
		</if>
	</select>

	<update id="updateTotaiTime" parameterType="com.db.entity.TestRecord">
		update
		td_test_record
		<set>
			update_time=#{updateTime}
			<if test="status !=null">
				,status=#{status}
			</if>
			<if test="totalTime !=null and totalTime != ''">
				,total_time=#{totalTime}
			</if>
			<if test="score !=null and score != ''">
				,score=#{score}
			</if>
			<if test="choiceId !=null">
				,choice_id=#{choiceId}
			</if>
		</set>
		where student_id=#{studentId} and paper_id=#{paperId};
	</update>
	<update id="updateScoreByStuIdandPaperId" parameterType="com.db.entity.TestRecord">
		update td_test_record
		<set>
		    <if test="updateTime != null and updateTime !=''">
		       update_time=#{updateTime}
		    </if>
			<if test="score != null">
			,score=#{score}
			</if>
			<if test="totalTime != null and totalTime != ''">
				,total_time=#{totalTime}
			</if>
			<if test="writeNumber != null">
				,write_number=#{writeNumber}
			</if>
			<if test="schoolId != null">
				,school_id=#{schoolId}
			</if>
			<if test="choiceId != null">
				,choice_id=#{choiceId}
			</if>
			<if test="year != null">
				,year=#{year}
			</if>
			<if test="gradeId != null">
				,grade_id=#{gradeId}
			</if>
		</set>
		where student_id=#{studentId} and paper_id=#{paperId};
	</update>

	<select id="getTestRecordByStuandPaper" resultMap="TestRecordMap">
		select
		tsb.*,tg.*,ttr.student_id,ttr.paper_id,ttr.score,ttr.total_time,ttr.create_time,ttr.update_time,ttr.class_id,ttr.write_number,ts.student_name
		from
		td_test_record ttr left join tb_student ts on
		ttr.student_id=ts.student_id left join
		tb_subject tsb
		on
		ttr.subject=tsb.subject_id left join tb_grade tg on
		ts.grade=tg.grade_id where ttr.student_id=#{studentId} and
		ttr.paper_id=#{paperId};
	</select>
	<select id="getEntrance" resultMap="TestRecordMap">
	 select * from td_test_record where student_id=#{studentId} and paper_id=#{paperId} and paper_type=4
	</select>

	<select id="getStauts" resultMap="TestRecordMap">
		SELECT* FROM
		td_test_record ttr
		LEFT JOIN tb_student ts ON ttr.student_id=ts.student_id LEFT JOIN
		tb_subject tsb
		ON ttr.subject=tsb.subject_id LEFT JOIN tb_grade tg ON
		ts.grade=tg.grade_id WHERE ttr.student_id=#{studentId} AND
		ttr.paper_id=#{paperId}
	</select>

	<select id="getRecordSituation" resultMap="TestRecordMap">
		select * from
		td_test_record tr
		left join tb_paper_info pa on tr.paper_id=pa.pi_id
		left join tb_subject
		sub on tr.subject=sub.subject_id
		where
		tr.student_id=#{studentId}
		order by tr.create_time desc limit
		#{pageNo},#{pageSize}
	</select>

	<select id="studentNameDateils" resultMap="TestRecordMap">
		select * from
		td_test_record tr left join tb_paper_info pa on
		tr.paper_id=pa.pi_id
		left join tb_subject sub on tr.subject=sub.subject_id left join
		tb_student
		s on tr.student_id=s.student_id
		where
		tr.student_id=#{studentId}
	</select>
	<select id="getCount" resultType="int">
		select count(*) from td_test_record where status=3
		<if test="subject != null and subject != ''">
			and subject=#{subject}
		</if>
		<if test="classId != null and classId != ''">
			and class_id=#{classId}
		</if>
		<if test="gradeId != null and gradeId != ''">
			and grade_id=#{gradeId}
		</if>
	</select>
	<select id="getPaperEndList" resultMap="TestRecordMap">
		select * from td_test_record tr left join tb_paper_info pi on
		tr.paper_id=pi.pi_id
		left join tb_subject sub on
		tr.subject=sub.subject_id left join
		td_task_type tt on
		tr.paper_type=tt.type_id
		left join tb_class_no cn on
		tr.class_id=cn.class_id
		left join tb_grade g on tr.grade_id=g.grade_id
		where tr.status=3
		<if test="subject != null and subject != ''">
			and tr.subject=#{subject}
		</if>
		<if test="classId != null and classId != ''">
			and tr.class_id=#{classId}
		</if>
		<if test="gradeId != null and gradeId != ''">
			and tr.grade_id=#{gradeId}
		</if>
	</select>
	<select id="getCountStudentId" resultType="int">
		select count(*) from
		td_test_record where student_id=#{studentId}
	</select>

	<select id="getStatusCout" resultType="int">
		select count(*) from td_test_record where status=3 and paper_type=4
		<if test="gradeId != null">
			and grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and subject=#{subjectId}
		</if>
	</select>
	
	<select id="getSchoolIdTeacherCout" resultType="int">
		select count(*) from td_test_record where status=3 and paper_type=4 and choice_id=#{schoolId}
		<if test="gradeId != null">
			and grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and subject=#{subjectId}
		</if>
	</select>
	
	<!-- 入学考试完成（分配班级） -->
	<select id="getTestRecordStatus" resultMap="TestRecordMap">
		select * from td_test_record tr 
		left join tb_subject sub on tr.subject=sub.subject_id
		left join tb_grade g on tr.grade_id=g.grade_id
		left join tb_paper_info info on tr.paper_id=info.pi_id
		left join tb_student st on tr.student_id=st.student_id
		left join tb_school_zone sz on tr.choice_id=sz.school_id
		where tr.status=3 and tr.paper_type=4
		<if test="gradeId != null">
			and tr.grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and tr.subject=#{subjectId}
		</if>
		<choose>
			<when test="schoolId != null">
				order by tr.choice_id desc limit #{pageNo},#{pageSize}
			</when>
			<when test="grade != null">
				order by tr.grade_id desc limit #{pageNo},#{pageSize}
			</when>
			<when test="score != null">
				order by tr.score desc limit #{pageNo},#{pageSize}
			</when>
			<otherwise>
				order by tr.create_time desc limit #{pageNo},#{pageSize}
			</otherwise>
		</choose>
	</select>
	<!-- 当前登录老师 -->
	<select id="getTestTeacherSchoolId" resultMap="TestRecordMap">
		select * from td_test_record tr left join tb_subject sub on
		tr.subject=sub.subject_id
		left join tb_grade g on
		tr.grade_id=g.grade_id
		left join tb_paper_info info on
		tr.paper_id=info.pi_id
		left join tb_student st on
		tr.student_id=st.student_id
		left join tb_school_zone sz on
		tr.choice_id=sz.school_id
		where tr.status=3 and tr.paper_type=4 and tr.choice_id=#{schoolId}
		<if test="gradeId != null">
			and tr.grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and tr.subject=#{subjectId}
		</if>
		<choose>
<!-- 			<when test="schoolId != null"> -->
<!-- 				order by tr.choice_id desc limit #{pageNo},#{pageSize} -->
<!-- 			</when> -->
			<when test="grade != null">
				order by tr.grade_id desc limit #{pageNo},#{pageSize}
			</when>
			<when test="score != null">
				order by tr.score desc limit #{pageNo},#{pageSize}
			</when>
			<otherwise>
				order by tr.create_time desc limit #{pageNo},#{pageSize}
			</otherwise>
		</choose>
	</select>
	<select id="getCountEx" resultType="int">
		select count(*) from td_test_record where status &lt;&gt;3
		<if test="gradeId != null">
			and grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and subject=#{subjectId}
		</if>
		<if test="schoolId != null">
			and school_id=#{schoolId}
		</if>
	</select>
	<select id="findEexecuteList" resultMap="TestRecordMap">
		select * from td_test_record tr left join tb_subject sub on
		tr.subject=sub.subject_id
		left join tb_grade g on
		tr.grade_id=g.grade_id
		left join tb_school_year sy on tr.year=sy.id
		left join tb_school_zone sz on tr.school_id=sz.school_id
		left join
		tb_season_type tyy on tr.choice_id=tyy.season_id
		where status&lt;&gt;3
		<if test="gradeId != null">
			and tr.grade_id=#{gradeId}
		</if>
		<if test="subjectId != null">
			and tr.subject=#{subjectId}
		</if>
		<if test="schoolId != null">
			and school_id=#{schoolId}
		</if>
		order by tr.create_time desc limit #{pageNo},#{pageSize}
	</select>
	<update id="updateStatus" parameterType="com.db.entity.TestRecord">
		update
		td_test_record set
		update_time=#{updateTime},status=#{status} where
		id=#{id}
	</update>
	<delete id="deleteRecordById" parameterType="java.lang.Integer">
		delete from
		td_test_record where id=#{id}
	</delete>
	<select id="distributionClassNo" resultMap="TestRecordMap">
		select * from td_test_record tr left join tb_subject sub on
		tr.subject=sub.subject_id
		left join tb_grade g on
		tr.grade_id=g.grade_id
		<!-- left join tb_school_year sy on tr.year=sy.id -->
		left join tb_school_zone sz on tr.school_id=sz.school_id
		<!-- left join tb_season_type tyy on tr.choice_id=tyy.season_id -->
		where tr.id=#{id}
	</select>
	<update id="updateClassId" parameterType="com.db.entity.TestRecord">
		update td_test_record
		set
		update_time=#{updateTime},class_id=#{classId}
		where id=#{id}
	</update>
	<select id="getTestRecordStudentId" resultMap="TestRecordMap">
		select * from
		td_test_record tr left join tb_subject sub on
		tr.subject=sub.subject_id
		left join tb_grade g on
		tr.grade_id=g.grade_id
		left join tb_school_year sy on tr.year=sy.id
		left join tb_school_zone sz on tr.school_id=sz.school_id
		left join
		tb_season_type tyy on tr.choice_id=tyy.season_id
		where
		tr.student_id=#{studentId}
	</select>
	<insert id="saveTextRecord" parameterType="com.db.entity.TestRecord"
		useGeneratedKeys="true" keyProperty="id">
		insert into td_test_record
		(student_id,paper_id,paper_type,status,create_time
		<if test="gradeId != null">
			<![CDATA[,grade_id]]>
		</if>
		<if test="year != null">
			<![CDATA[,year]]>
		</if>
		<if test="choiceId != null">
			<![CDATA[,choice_id]]>
		</if>
		<if test="schoolId != null">
			<![CDATA[,school_id]]>
		</if>
		<if test="subjectId != null">
			<![CDATA[,subject]]>
		</if>
		)
		values(#{studentId},#{paperId},#{paperType},#{status},#{createTime}
		<if test="gradeId != null">
			<![CDATA[,#{gradeId}]]>
		</if>
		<if test="year != null">
			<![CDATA[,#{year}]]>
		</if>
		<if test="choiceId != null">
			<![CDATA[,#{choiceId}]]>
		</if>
		<if test="schoolId != null">
			<![CDATA[,#{schoolId}]]>
		</if>
		<if test="subjectId != null">
			<![CDATA[,#{subjectId}]]>
		</if>
		)
	</insert>
	<select id="findTextRecordById" resultMap="TestRecordMap">
		select * from
		td_test_record where student_id=#{studentId} and
		paper_id=#{paperId}
		and subject=#{subjectId} and school_id=#{schoolId}
	</select>
	<select id="findMyQizhongAndQimoTestRecord" resultMap="TestRecordMap">
		select *
		from td_test_record t left join tb_paper_info p on t.paper_id =
		p.pi_id
		left join tb_subject s on p.subject = s.subject_id where t.student_id =
		#{studentId} and t.class_id=#{classId}
		and t.status=3 and t.paper_type in (2,3);
	</select>
	<update id="updateWriteNumber" parameterType="com.db.entity.TestRecord">
		update td_test_record set
		update_time=#{updateTime},write_number=#{writeNumber} where
		student_id=#{studentId} and paper_id=#{paperId}
	</update>

	<!--获取单科试卷成绩排名 -->
	<select id="findObtainScoreRankList" resultMap="TestRecordMap">
	SELECT t.score,t.student_id,t.paper_id,t.class_id,(SELECT
	COUNT(s.score)+1 FROM (SELECT s.score,s.paper_id,s.class_id,COUNT(s.score) FROM td_test_record
	s where 1=1 
	  <if test="classId != null">
		and s.class_id=#{classId}
	</if>
	<if test="paperId != null">
		and s.paper_id=#{paperId}
	</if>
	  GROUP BY score ORDER BY score DESC) s WHERE s.score>t.score
	
	) score_rank FROM td_test_record t WHERE t.paper_id=#{paperId}
	<if test="classId != null">
		and t.class_id=#{classId}
	</if>
	ORDER BY t.score DESC;
	</select>
	<select id="getClassPaperCount" resultType="int">
	select count(*) from td_test_record where class_id=#{classId} and paper_id=#{paperId}
	</select>
	<select id="findClassPaperList" resultMap="TestRecordMap">
	SELECT * FROM td_test_record tr 
	  LEFT JOIN tb_student s ON tr.student_id=s.student_id
	  LEFT JOIN tb_class_no cn ON tr.class_id=cn.class_id
	  LEFT JOIN tb_paper_info h ON tr.paper_id=h.pi_id
	  LEFT JOIN tb_subject sub ON tr.subject=sub.subject_id
	   WHERE 1=1
	   <if test="classId != null">
		  and tr.class_id=#{classId} 
		</if>
		<if test="paperId != null">
		 and tr.paper_id =#{paperId}
		</if>
		<if test="studentName != null and studentName !=''">
		 and s.student_name like CONCAT('%','${studentName}','%')
		</if>
		 order by tr.score desc limit #{pageNo},#{pageSize}
	</select>
	<select id="findClassPaperInfoAnalysisList" resultMap="TestRecordMap">
	SELECT * FROM td_test_record where paper_id=#{paperId} and class_id=#{classId} and paper_type &lt;&gt;4
	</select>
	<select id="getClassIdAvgScore" resultType="double">
		SELECT AVG(score) AS gradesSum FROM td_test_record  WHERE paper_id=#{paperId}
		AND class_id=#{classId}
	</select>
</mapper>